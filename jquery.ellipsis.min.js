/*!
 * jQuery.ellipsis
 * http://github.com/jjenzz/jquery.ellipsis
 * --------------------------------------------------------------------------
 * Copyright (c) 2013 J. Smith (@jjenzz)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * adds a class to the last 'allowed' line of text so you can apply
 * text-overflow: ellipsis;
 */ !function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function($){"use strict";var a="ellipsis",b='<span style="white-space: nowrap;">',c={lines:"auto",ellipClass:"ellip",responsive:!1};function d(f,g){var e,l,m,n,o,p,q,h,d=this,r=0,s=[];function i(){if("number"==typeof d.opts.lines&&d.opts.lines<2){d.$el.addClass(d.opts.ellipLineClass);return}p=d.$cont.height(),!("auto"===d.opts.lines&&d.$el.prop("scrollHeight")<=p)&&e&&(q=$.trim(u(d.text)).split(/\s+/),d.$el.html(b+q.join("</span> "+b)+"</span>"),d.$el.find("span").each(e),null!=l&&t(l))}function t(a){q[a]='<span class="'+d.opts.ellipLineClass+'">'+q[a],q.push("</span>"),d.$el.html(q.join(" "))}function u(a){return String(a).replace(/[&<>"'``\/]/g,function(a){return h[a]})}if(h={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","/":"&#x2F;","\\":"&#x5C;"},d.$cont=$(f),d.opts=$.extend({},c,g),"auto"===d.opts.lines&&(e=function(c,d){var a=$(d),b=a.position().top;if(o=o||a.height(),b===n?s[r].push(a):(n=b,s[r+=1]=[a]),b+o>p)return l=c-s[r-1].length,!1}),"number"==typeof d.opts.lines&&d.opts.lines>1&&(e=function(b,c){var a=$(c).position().top;if(a!==n&&(n=a,r+=1),r===d.opts.lines)return l=b,!1}),d.opts.responsive){var j=$(window),v=j.width(),k=function(){j.width()!==v&&(v=j.width(),s=[],r=0,n=null,l=null,d.$el.html(u(d.text)),clearTimeout(m),m=setTimeout(i,100))};$(window).on("resize."+a,k)}d.text=d.$cont.text(),d.opts.ellipLineClass=d.opts.ellipClass+"-line",d.$el=$('<span class="'+d.opts.ellipClass+'" />'),d.$el.text(d.text),d.$cont.empty().append(d.$el),i()}$.fn[a]=function(b){return this.each(function(){try{$(this).data(a,new d(this,b))}catch(c){window.console&&console.error(a+": "+c)}})}})